// Code generated by SlParser. Do not edit.
package internal

import (
	"github.com/PlayerR9/SlParser/parser"
)

type TokenType int

const (
	EtInvalid TokenType = iota -1
	EtEof
	TtColon
	TtLowercaseId
	TtNewline
	TtSemicolon
	TtUppercaseId
	NtRhs
	NtRule
	NtRule1
	NtSource
	NtSource1
)

func (t TokenType) IsTerminal() bool {
	return t <= TtUppercaseId
}
	
var (
	Parser *parser.Parser[TokenType]
)

func init() {
	is := parser.NewItemSet[TokenType]()
	
	_ = is.AddRule(source, source1, EOF)
	_ = is.AddRule(source1, rule)
	_ = is.AddRule(source1, rule, NEWLINE, source1)
	_ = is.AddRule(rule, LOWERCASE_ID, COLON, rule1, SEMICOLON)
	_ = is.AddRule(rule1, rhs)
	_ = is.AddRule(rule1, rhs, rule1)
	_ = is.AddRule(rhs, UPPERCASE_ID)
	_ = is.AddRule(rhs, LOWERCASE_ID)

	Parser = parser.Build(&is)
}