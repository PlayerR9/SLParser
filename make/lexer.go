// Code generated by SlParser. Do not edit.
package main

import (
	"github.com/PlayerR9/SlParser/parser"
)

//go:generate stringer -type=TokenType

type TokenType int

const (
	EtInvalid TokenType = iota -1
	EtEOF
	TtListComprehension
	TtNewline
	TtPrintStmt
	NtSource
	NtSource1
	NtStatement
)

func (t TokenType) IsTerminal() bool {
	return t <= NtStatement
}
	
var (
	is parser.ItemSet[TokenType]
)

func init() {
	is = parser.NewItemSet[TokenType]()

	
	_ = is.AddRule(NtSource, TtNewline, NtSource1, EtEOF)
	
	_ = is.AddRule(NtSource1, NtStatement)
	
	_ = is.AddRule(NtSource1, NtStatement, TtNewline, NtSource1)
	
	_ = is.AddRule(NtStatement, TtListComprehension)
	
	_ = is.AddRule(NtStatement, TtPrintStmt)
	
}

var (
	Parser *parser.Parser[TokenType]
)

func init() {
	Parser = parser.Build(&is)
}

// PrintItemSet prints the item set.
//
// Returns:
//   - []string: the lines of the item set.
func PrintItemSet() []string {
	return is.PrintTable()
}